{"version":3,"sources":["task_3.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","delay","promise","Promise","resolve","reject","setTimeout","id","logSuccess","time","console","log","logError","warn","amount","then","catch"],"mappings":";AAAA,IAAMA,EAA4B,SAACC,EAAKC,GAC7BC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAIlDK,EAAkB,SAAEC,GAChBC,IAAAA,EAAQR,EAA0B,IAAK,KActCS,OAZS,IAAIC,QAAQ,SAACC,EAASC,GAClCC,WAAW,WACYV,KAAKE,SAAW,GAGhCM,EAAS,CAAQJ,GAAAA,EAAYO,GAAYN,KAAAA,IAEzCI,EAAQL,EAAYO,KAExBN,MAOLO,EAAa,SAAgB,GAAdD,IAAAA,EAAAA,EAAAA,GAAIE,EAAAA,EAAAA,KACrBC,QAAQC,IAAmBJ,eAAAA,OAAAA,EAAmBE,kBAAAA,OAAAA,EAA9C,QAGEG,EAAW,SAAAL,GACbG,QAAQG,KAAqCN,gCAAAA,OAAAA,EAA7C,+BAGJR,EAAgB,CAAEQ,GAAI,GAAIO,OAAQ,MAC9BC,KAAKP,GACLQ,MAAMJ,GAEVb,EAAgB,CAAEQ,GAAI,GAAIO,OAAQ,MAC7BC,KAAKP,GACLQ,MAAMJ,GAEXb,EAAgB,CAAEQ,GAAI,GAAIO,OAAQ,KAC7BC,KAAKP,GACLQ,MAAMJ,GAEXb,EAAgB,CAAEQ,GAAI,GAAIO,OAAQ,MAC7BC,KAAKP,GACLQ,MAAMJ","file":"task_3.0ae70700.js","sourceRoot":"../src","sourcesContent":["const randomIntegerFromInterval = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n //-------------------------------\nconst makeTransaction = ( transaction ) => {\n    const delay = randomIntegerFromInterval(200, 500);\n    \n    const promise = new Promise((resolve, reject) => {\n        setTimeout(() => {\n            const canProcess = Math.random() > 0.3;\n  \n            if (canProcess) {\n               resolve( { \"id\": transaction.id, \"time\": delay } )\n            } else {\n               reject( transaction.id );\n            }\n        }, delay);\n    });\n\n    return promise;\n};\n//----------------------------------\n\nconst logSuccess = ({id, time}) => {\n    console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n    console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n  \nmakeTransaction({ id: 70, amount: 150 })\n   .then(logSuccess)\n   .catch(logError);\n  \nmakeTransaction({ id: 71, amount: 230 })\n    .then(logSuccess)\n    .catch(logError);\n  \nmakeTransaction({ id: 72, amount: 75 })\n    .then(logSuccess)\n    .catch(logError);\n  \nmakeTransaction({ id: 73, amount: 100 })\n    .then(logSuccess)\n    .catch(logError);\n  "]}